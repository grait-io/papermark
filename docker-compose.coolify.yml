version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "${APP_PORT:-25256}:3000"
    environment:
      # Database - External PostgreSQL (provided by Coolify)
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_PRISMA_URL: ${DATABASE_URL}
      POSTGRES_PRISMA_URL_NON_POOLING: ${DATABASE_URL}
      
      # Application
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:25256}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXT_PUBLIC_URL: ${NEXT_PUBLIC_URL:-http://localhost:25256}
      NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_URL:-http://localhost:25256}
      NEXT_PUBLIC_MARKETING_URL: ${NEXT_PUBLIC_URL:-http://localhost:25256}
      
      # Storage
      STORAGE_PROVIDER: ${STORAGE_PROVIDER:-vercel-blob}
      BLOB_READ_WRITE_TOKEN: ${BLOB_READ_WRITE_TOKEN}
      NEXT_PUBLIC_VERCEL_BLOB_BASE_URL: ${NEXT_PUBLIC_VERCEL_BLOB_BASE_URL}
      
      # AWS S3 (if using S3 storage)
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
      AWS_S3_REGION: ${AWS_S3_REGION}
      
      # Email
      RESEND_API_KEY: ${RESEND_API_KEY}
      RESEND_AUDIENCE_ID: ${RESEND_AUDIENCE_ID}
      EMAIL_FROM: ${EMAIL_FROM:-noreply@localhost}
      
      # Analytics
      TINYBIRD_TOKEN: ${TINYBIRD_TOKEN}
      NEXT_PUBLIC_TINYBIRD_BASE_URL: ${NEXT_PUBLIC_TINYBIRD_BASE_URL:-https://api.tinybird.co}
      
      # Authentication
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      
      # Stripe
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      
      # Upstash
      UPSTASH_REDIS_REST_URL: ${UPSTASH_REDIS_REST_URL}
      UPSTASH_REDIS_REST_TOKEN: ${UPSTASH_REDIS_REST_TOKEN}
      UPSTASH_QSTASH_URL: ${UPSTASH_QSTASH_URL}
      UPSTASH_QSTASH_TOKEN: ${UPSTASH_QSTASH_TOKEN}
      
      # Security
      DOCUMENT_ENCRYPTION_KEY: ${DOCUMENT_ENCRYPTION_KEY}
      
      # Trigger.dev
      TRIGGER_SECRET_KEY: ${TRIGGER_SECRET_KEY}
      TRIGGER_API_URL: ${TRIGGER_API_URL}
      
      # Node
      NODE_ENV: production
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s